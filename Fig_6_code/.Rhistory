?ave
?scale
#BiocManager::install("Biostrings")
#install.packages("seqinr")
#install.packages("reshape")
#install.packages("tidyverse")
#install.packages("cowplot")
#install.packages("corrr")
#install.packages("foreach")
#install.packages("doParallel")
#install.packages("doSNOW")
#install.packages("data.table")
library("Biostrings")
library("tidyverse")
library("seqinr")
library("foreach")
library("doParallel")
library("doSNOW")
library("data.table")
library("cowplot")
rm(list=ls()); # clear environment
theme_new <- function(){
theme_bw() %+replace%
theme(
plot.title = element_text(   color = "black", size = 7, face = "bold", hjust = 0),
axis.title = element_text(   color = "black", size = 7),
axis.text = element_text(    color = "black", size = 6),
legend.text = element_text(  color = "black", size = 5),
legend.title = element_text( color = "black", size = 5),
strip.text = element_text(   color = "black", size = 6),
strip.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
complete = TRUE
)
}
#-----------------------------------------------------------------#
#---------------------- [0] Initial setup ------------------------#
#-----------------------------------------------------------------#
PATH_TO_GENOME = "inputs/"
GENOMES = list.files(path = PATH_TO_GENOME, pattern = "_cds_from_genomic.fna.gz")
GENOME_NAMES = gsub(x = GENOMES, pattern = "_cds_from_genomic.fna.gz", replacement = "")
NUMBER_OF_CODONS_TO_ANALYZE = 250
Elements_df_boot_ALL   <- data.frame()
model_fitness_5end_ALL <- tibble()
#-----------------------------------------------------------------#
#------------------ [1] Analyzing REAL genome --------------------#
#-----------------------------------------------------------------#
CURRENT_GENOME = 1
CURRENT_GENOME_NAME = paste0("", GENOME_NAMES[CURRENT_GENOME])
subset_CDS_file <- readDNAStringSet(filepath = paste0(PATH_TO_GENOME, GENOMES[CURRENT_GENOME])) # PATH to the CDS FASTA file
# Remove CDSs that are not multiple of 3
subset_CDS_file <- subset_CDS_file[width(subset_CDS_file) %% 3 == 0]
# Select only CDSs with length greater than NUMBER_OF_CODONS_TO_ANALYZE times 3 (e.g. 300 bases when 100 codons)
subset_CDS_file <- subset_CDS_file[width(subset_CDS_file) >= NUMBER_OF_CODONS_TO_ANALYZE * 3]
# Select only the coding sequence region from the position # 1 to the position # NUMBER_OF_CODONS_TO_ANALYZE * 3
subset_CDS_file <- subseq(x = subset_CDS_file, start = 1, width = NUMBER_OF_CODONS_TO_ANALYZE * 3)
length(subset_CDS_file)
subset_CDS_file <- readDNAStringSet(filepath = paste0(PATH_TO_GENOME, GENOMES[CURRENT_GENOME])) # PATH to the CDS FASTA file
length(subset_CDS_file)
# Remove CDSs that are not multiple of 3
subset_CDS_file <- subset_CDS_file[width(subset_CDS_file) %% 3 == 0]
length(subset_CDS_file)
# Select only CDSs with length greater than NUMBER_OF_CODONS_TO_ANALYZE times 3 (e.g. 300 bases when 100 codons)
subset_CDS_file <- subset_CDS_file[width(subset_CDS_file) >= NUMBER_OF_CODONS_TO_ANALYZE * 3]
length(subset_CDS_file)
NUMBER_OF_CODONS_TO_ANALYZE = 100
Elements_df_boot_ALL   <- data.frame()
model_fitness_5end_ALL <- tibble()
#-----------------------------------------------------------------#
#------------------ [1] Analyzing REAL genome --------------------#
#-----------------------------------------------------------------#
CURRENT_GENOME = 1
CURRENT_GENOME_NAME = paste0("", GENOME_NAMES[CURRENT_GENOME])
subset_CDS_file <- readDNAStringSet(filepath = paste0(PATH_TO_GENOME, GENOMES[CURRENT_GENOME])) # PATH to the CDS FASTA file
# Remove CDSs that are not multiple of 3
subset_CDS_file <- subset_CDS_file[width(subset_CDS_file) %% 3 == 0]
# Select only CDSs with length greater than NUMBER_OF_CODONS_TO_ANALYZE times 3 (e.g. 300 bases when 100 codons)
subset_CDS_file <- subset_CDS_file[width(subset_CDS_file) >= NUMBER_OF_CODONS_TO_ANALYZE * 3]
length(subset_CDS_file)
# Select only the coding sequence region from the position # 1 to the position # NUMBER_OF_CODONS_TO_ANALYZE * 3
subset_CDS_file <- subseq(x = subset_CDS_file, start = 1, width = NUMBER_OF_CODONS_TO_ANALYZE * 3)
length(subset_CDS_file)
setwd("~/Dropbox/PhD/3_0_pD_transcript_biosynthetic_cost/00_manuscript/figures/Fig_2n3_code")
?getInitial
?SSlogis
?nls
?cor
p.adjust(p = c(0.04, 0.0082, 0.00025), method = "BY")
?p.adjust
setwd("~/Dropbox/PhD/3_0_pD_transcript_biosynthetic_cost/00_manuscript/figures/Fig_4_code")
#-------- LIBRARIES -------#
library("tidyverse")
library("cowplot")
rm(list=ls()); # clear environment
theme_new <- function(){
theme_bw() %+replace%
theme(
plot.title = element_text(   color = "black", size = 6, hjust = 0),
axis.title = element_text(   color = "black", size = 6),
axis.text = element_text(    color = "black", size = 6),
legend.text = element_text(  color = "black", size = 6),
legend.title = element_text( color = "black", size = 6),
strip.text = element_text(   color = "black", size = 6),
strip.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
complete = TRUE
)
}
bacteria_df <- read.delim("inputs/Integrated_all_df_Bacteria.txt")
bacteria_df$superkingdom <- "Bacteria"
archaea_df <- read.delim("inputs/Integrated_all_df_Archaea.txt")
archaea_df$superkingdom <- "Archaea"
Integrated_all_df <- rbind(bacteria_df, archaea_df)
length(unique(archaea_df$Organism))
length(unique(bacteria_df$Organism))
200 * (length(unique(bacteria_df$Organism)) + length(unique(archaea_df$Organism)))
?stat_summary
?mean_cl_boot
?scale
#-------- LIBRARIES -------#
library("tidyverse")
library("cowplot")
rm(list=ls()); # clear environment
theme_new <- function(){
theme_bw() %+replace%
theme(
plot.title = element_text(   color = "black", size = 6, hjust = 0),
axis.title = element_text(   color = "black", size = 6),
axis.text = element_text(    color = "black", size = 6),
legend.text = element_text(  color = "black", size = 6),
legend.title = element_text( color = "black", size = 6),
strip.text = element_text(   color = "black", size = 6),
strip.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
complete = TRUE
)
}
bacteria_df <- read.delim("inputs/Integrated_all_df_Bacteria.txt")
length(unique(bacteria_df$Organism))
bacteria_df$superkingdom <- "Bacteria"
archaea_df <- read.delim("inputs/Integrated_all_df_Archaea.txt")
length(unique(archaea_df$Organism))
archaea_df$superkingdom <- "Archaea"
Integrated_all_df <- rbind(bacteria_df, archaea_df)
View(head(Integrated_all_df))
View(head(Integrated_all_df))
Integrated_all_df %>% head
tibble(Integrated_all_df$superkingdom, Integrated_all_df$Organism) %>%  head
tibble(Integrated_all_df$superkingdom, Integrated_all_df$Organism) %>%
colnames("superkingdom", "RefSeq_number") %>%
head
tibble(Integrated_all_df$superkingdom, Integrated_all_df$Organism) %>%
mutate(`Integrated_all_df$superkingdom` = "superkingdom", `Integrated_all_df$Organism` = "RefSeq_number") %>%
head
tibble(Integrated_all_df$superkingdom, Integrated_all_df$Organism) %>%
rename(`Integrated_all_df$superkingdom` = "superkingdom", `Integrated_all_df$Organism` = "RefSeq_number") %>%
head
tibble(Integrated_all_df$superkingdom, Integrated_all_df$Organism) %>%
rename(`Integrated_all_df$superkingdom` = "superkingdom", `Integrated_all_df$Organism` = "RefSeq_number") %>%
head
tibble(Integrated_all_df$superkingdom, Integrated_all_df$Organism) %>%
rename("superkingdom" = `Integrated_all_df$superkingdom` , "RefSeq_number" = `Integrated_all_df$Organism` ) %>%
head
tibble(Integrated_all_df$superkingdom, Integrated_all_df$Organism) %>%
rename("superkingdom" = `Integrated_all_df$superkingdom` ,
"RefSeq_number" = `Integrated_all_df$Organism` ) %>%
unique() %>%
head()
write_csv(x = tibble(Integrated_all_df$superkingdom, Integrated_all_df$Organism) %>%
rename("superkingdom" = `Integrated_all_df$superkingdom` ,
"RefSeq_number" = `Integrated_all_df$Organism` ) %>%
unique(), col_names = TRUE, path = "Table_S2_Representative_dataset_Integrated_all_df.csv")
citation("shiny")
